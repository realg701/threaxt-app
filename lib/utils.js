"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.cn = cn;
exports.isBase64Image = isBase64Image;
exports.formatDateString = formatDateString;
exports.formatThreadCount = formatThreadCount;
const clsx_1 = require("clsx");
const tailwind_merge_1 = require("tailwind-merge");
// generated by shadcn
function cn(...inputs) {
    return (0, tailwind_merge_1.twMerge)((0, clsx_1.clsx)(inputs));
}
// created by chatgpt
function isBase64Image(imageData) {
    const base64Regex = /^data:image\/(png|jpe?g|gif|webp);base64,/;
    return base64Regex.test(imageData);
}
// created by chatgpt
function formatDateString(dateString) {
    const options = {
        year: "numeric",
        month: "short",
        day: "numeric",
    };
    const date = new Date(dateString);
    const formattedDate = date.toLocaleDateString(undefined, options);
    const time = date.toLocaleTimeString([], {
        hour: "numeric",
        minute: "2-digit",
    });
    return `${time} - ${formattedDate}`;
}
// created by chatgpt
function formatThreadCount(count) {
    if (count === 0) {
        return "No Threads";
    }
    else {
        const threadCount = count.toString().padStart(2, "0");
        const threadWord = count === 1 ? "Thread" : "Threads";
        return `${threadCount} ${threadWord}`;
    }
}
